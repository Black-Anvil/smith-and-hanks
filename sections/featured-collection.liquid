<section data-component="featured-collection" data-component-type="section" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="featured-collection">
  {% liquid
    assign onboarding = false
    if section.settings.collection == blank
      assign onboarding = true
    endif
  %}
  {% if section.settings.heading != blank or section.settings.subheading != blank or section.settings.show_view_all_button %}
    <section-wrapper>
      <section-content>
        <div class="featured-collection__header">
          {% if section.settings.heading != blank or section.settings.subheading != blank %}
            <div class="featured-collection__header-text">
              {% if section.settings.heading != blank %}
                <h2 class="featured-collection__heading">
                  {{ section.settings.heading | escape }}
                </h2>
              {% endif %}
              {% if section.settings.subheading != blank %}
                <div class="featured-collection__subheading">
                  {{ section.settings.subheading | escape }}
                </div>
              {% endif %}
            </div>
          {% endif %}
          {% if section.settings.show_view_all_button %}
            {% liquid
              assign show_button = true
              assign button_text = 'sections.featured_collection.view_all' | t

              if section.settings.collection.products_count <= section.settings.limit or onboarding
                assign show_button = false
              endif
            %}
            {% capture button_attributes %}
              aria-label="{{ 'sections.featured_collection.view_all_label' | t: collection_name: section.settings.collection.title }}"
            {% endcapture %}

            {% if show_button %}
              <div class="featured-collection__header-button">
                {% comment %}Component button-link:default:1.0.0-pre.10 begin{% endcomment %}
                {% liquid
                  assign href_f3269dff = href
                  assign href = section.settings.collection.url
                  assign style_f3269dff = style
                  assign style = 'secondary'
                  assign size_f3269dff = size
                  assign size = 'small'
                  assign text_f3269dff = text
                  assign text = button_text
                  assign attributes_f3269dff = attributes
                  assign attributes = button_attributes
                %}
                {% comment %}
                  @param href [Required]
                    This is the anchor tag for the link button.
                
                  @param style [Required]
                    This is the style of the button: primary, secondary, tertiary, or text.
                
                  @param size [Required]
                    This defines the size of the button: small, medium, or large.
                
                  @param text [Required]
                    This is the text to be included in the button.
                
                  @param attributes [Optional]
                    Any additional attributes to add to the button-link tag.
                {% endcomment %}
                
                <a
                  data-component="button-link"
                  data-component-type="component"
                  {% if tag != blank %}data-component-tag="{{ tag }}"
                  {% endif %}class="button-link button-link--{{ style }} button-link--{{ size }}{% if style == 'primary' or style == 'secondary' %} button-link--shadow{% endif %%}"
                  {% if href != blank %}
                    href="{{ href }}"
                  {% endif %}
                  {{ attributes }}
                >
                  {{ text }}
                </a>
                
                {% liquid
                  assign href = href_f3269dff
                  assign href_f3269dff = nil
                  assign style = style_f3269dff
                  assign style_f3269dff = nil
                  assign size = size_f3269dff
                  assign size_f3269dff = nil
                  assign text = text_f3269dff
                  assign text_f3269dff = nil
                  assign attributes = attributes_f3269dff
                  assign attributes_f3269dff = nil
                %}
                {% comment %}Component button-link:default:1.0.0-pre.10 end{% endcomment %}
              </div>
            {% endif %}
          {% endif %}
        </div>
      </section-content>
    </section-wrapper>
  {% endif %}
  <section-wrapper>
    <section-content>
      {% comment %}Component product-card-slider:default:1.0.0-pre.10 begin{% endcomment %}
      {% liquid
        assign products_47c4d339 = products
        assign products = section.settings.collection.products
        assign limit_47c4d339 = limit
        assign limit = section.settings.limit
        assign cards_per_group_47c4d339 = cards_per_group
        assign cards_per_group = section.settings.cards_per_group
      %}
      {%- comment -%}
        @param products [Required]
          The list of products to display
      
        @param cards_per_group [Optional]
          Number to group card slides by. Defaults to 3
      
        @param cards_per_group_mobile [Optional]
          Show a single card at a time on mobile. Defaults to 2
      
        @param limit [Optional]
          The number of product cards to render. Defaults to 5
      
        @param card_style [Optional]
          Indicates whether to include product cross-sell cards
          or regular product cards. Defaults to 'product'
      
        @param onboarding [Optional]
          If true, placeholder product cards will be shown
      {%- endcomment -%}
      
      <div data-component="product-card-slider" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="product-card-slider">
        {% assign cards_per_group = cards_per_group | default: 3 %}
        {% assign cards_per_group_mobile = cards_per_group_mobile | default: 2 %}
        {% assign scroll_increment_bp = scroll_increment_bp | default: 'M' %}
      
        <script
          type="application/json"
          data-component-data
        >
          {
            "cardsPerRow": {{ cards_per_group | json }},
            "cardsPerRowMobile": {{ cards_per_group_mobile }},
            "scrollIncrementBp": {{ scroll_increment_bp | json }}
          }
        </script>
        {% liquid
          assign card_style = card_style | default: 'product'
          assign previous_label = 'general.accessibility.previous_slide' | t
          assign next_label = 'general.accessibility.next_slide' | t
          assign cards_per_group_int = cards_per_group | plus: 0
          assign hide_desktop_buttons = false
          assign hide_mobile_buttons = false
          assign is_single_row = false
          assign onboarding = onboarding | default: false
          assign limit = limit | default: 5
      
          if cards_per_group_int == limit
            assign is_single_row = true
            assign hide_desktop_buttons = true
          endif
      
          if products.size <= cards_per_group_int or limit <= cards_per_group_int
            assign hide_desktop_buttons = true
          endif
      
          if limit == 2
            assign hide_mobile_buttons = true
          endif
        %}
        <ul
          class="
            product-card-slider__list
            {% if is_single_row %}
              product-card-slider__list--single-row
            {% endif %}
            {% if hide_mobile_buttons %}
              product-card-slider__list--mobile-single-row
            {% endif %}
          "
          style="--cards-per-row: {{ cards_per_group }};"
          role="list"
          data-slider
          data-mobile-card-row="{{ cards_per_group_mobile }}"
          data-mobile-card-row-bp="{{ scroll_increment_bp }}"
        >
          {% unless onboarding %}
            {% for product_item in products limit: limit %}
              <li class="product-card-slider__item" data-slider-item>
                {% if card_style == 'product' %}
                  {% comment %}Component product-card:default:1.0.0-pre.10 begin{% endcomment %}
                  {% render 'product-card', product_card_product: product_item %}
                  {% comment %}Component product-card:default:1.0.0-pre.10 end{% endcomment %}
                {% else %}
                  {% comment %}UUID product_form_id begin{% endcomment %}
                  {% assign product_form_id = '511644fe-437d-428d-9add-818165fc6160' %}
                  {% comment %}UUID product_form_id end{% endcomment %}
                  {% assign form_id = product_form_id | append: forloop.index0 %}
      
                  {% comment %}Component cross-sell-card:default:1.0.0-pre.10 begin{% endcomment %}
                  {% liquid
                    assign cross_sell_product_b86bfb35 = cross_sell_product
                    assign cross_sell_product = product_item
                  %}
                  {% comment %}
                    @param cross_sell_product
                  
                    @param form_id
                  {% endcomment %}
                  {% comment %} Product Labels {% endcomment %}
                  
                  {% assign label_metafield = settings.product_card_label_metafield | split: '.' %}
                  {% assign icon_metafield = settings.product_card_icon_metafield | split: '.' %}
                  
                  {% if cross_sell_product.metafields[label_metafield[0]][label_metafield[1]] != blank or cross_sell_product.metafields[icon_metafield[0]][icon_metafield[1]] != blank %}
                      {% capture product_label %}
                      <div class="cross-sell-card__label cross-sell-card__label--{{ settings.product_card_label_style }}">
                        {% if cross_sell_product.metafields[icon_metafield[0]][icon_metafield[1]] != blank %}
                          <div class="cross-sell-card__label-icon">
                            {% comment %}Component lazy-img:default:1.0.0-pre.10 begin{% endcomment %}
                            {% render 'lazy-img', img: cross_sell_product.metafields[icon_metafield[0]][icon_metafield[1]], size: '20x' %}
                            {% comment %}Component lazy-img:default:1.0.0-pre.10 end{% endcomment %}
                          </div>
                        {% endif %}
                        {% if cross_sell_product.metafields[label_metafield[0]][label_metafield[1]] != blank %}
                          {{ cross_sell_product.metafields[label_metafield[0]][label_metafield[1]] }}
                        {% endif %}
                      </div>
                    {% endcapture %}
                  {% endif %}
                  
                  
                  
                  {% comment %} Find which option is set up for Color (if it exists) so we can be set up for swatches, variant images,
                  and the color label on the title {% endcomment %}
                  {% assign color_option_key = blank %}
                  {% if cross_sell_product.options_by_name['Color'] != blank %}
                    {% assign color_option_key = 'option' | append: cross_sell_product.options_by_name['Color'].position %}
                  {% endif %}
                  
                  {% assign color_variants_added = '|' %}
                  {% assign variant_images_html = '' %}
                  {% assign variant_indices_string = '' %}
                  
                  {% if color_option_key != blank %}
                    {% for next_variant in cross_sell_product.variants %}
                      {% assign search_string = '|' | append: next_variant[color_option_key] | downcase | append: '|' %}
                      {% unless color_variants_added contains search_string %}
                        {% if next_variant.featured_media != blank %}
                          {% capture variant_image_part %}
                            <div
                              class="cross-sell-card__img-variant hidden"
                              data-variant-image="{{ next_variant[color_option_key] | downcase }}"
                              data-variant-id="{{ next_variant.id }}"
                            >
                              {% comment %}Component lazy-img:default:1.0.0-pre.10 begin{% endcomment %}
                              {% render 'lazy-img', img: next_variant.featured_media.preview_image, size: '700x', lazy: false, crop_focus: 'center', fill_mode: 'fill' %}
                              {% comment %}Component lazy-img:default:1.0.0-pre.10 end{% endcomment %}
                            </div>
                          {% endcapture %}
                          {% assign variant_images_html = variant_images_html | append: variant_image_part %}
                        {% endif %}
                  
                        {% assign color_variants_added = color_variants_added | append: next_variant[color_option_key] | downcase | append: '|' %}
                        {% assign variant_indices_string = variant_indices_string | append: '|' | append: forloop.index0 %}
                      {% endunless %}
                    {% endfor %}
                  {% endif %}
                  
                  {% assign color_array = color_variants_added | remove_first: '|' | split: '|' %}
                  {% assign variant_indices_array = variant_indices_string | remove_first: '|' | split: '|' %}
                  
                  {% assign variant = cross_sell_product.selected_or_first_available_variant %}
                  
                  {%- capture first_product_img -%}
                    {% if variant.image != blank %}
                      {% comment %}Component lazy-img:default:1.0.0-pre.10 begin{% endcomment %}
                      {% render 'lazy-img', img: variant.image, size: '700x', lazy: false, crop_focus: 'center', fill_mode: 'fill' %}
                      {% comment %}Component lazy-img:default:1.0.0-pre.10 end{% endcomment %}
                    {% elsif cross_sell_product.featured_media.preview_image != blank %}
                      {% comment %}Component lazy-img:default:1.0.0-pre.10 begin{% endcomment %}
                      {% render 'lazy-img', img: cross_sell_product.featured_media.preview_image, size: '700x', lazy: false, crop_focus: 'center', fill_mode: 'fill' %}
                      {% comment %}Component lazy-img:default:1.0.0-pre.10 end{% endcomment %}
                    {% else %}
                      {%- capture index -%}
                        {%- cycle '1', '2', '3', '4', '5', '6' -%}
                      {%- endcapture -%}
                      {{ 'product-' | append: index | placeholder_svg_tag: 'placeholder-svg' }}
                    {% endif %}
                  {%- endcapture -%}
                  
                  <div
                    data-component="cross-sell-card"
                    data-component-type="component"
                    {% if tag != blank %}data-component-tag="{{ tag }}"
                    {% endif %}class="cross-sell-card"
                    data-cross-sell-card
                  >
                    <script
                      type="application/json"
                      data-component-data
                    >
                      {
                        "product": {{ all_products[cross_sell_product.handle] | json }},
                        "selectedVariant": {{ variant | json }},
                        "sectionId": {{ section.id | json }},
                        "recommendationsRoute": {{ routes.product_recommendations_url | json }}
                      }
                    </script>
                    <div
                      class="cross-sell-card__img"
                      data-product-image
                    >
                      {% if color_option_key != blank %}
                        <div
                          class="cross-sell-card__img-variants hidden"
                          data-variant-images
                        >
                          {{ variant_images_html }}
                        </div>
                      {% endif %}
                      <div
                        class="cross-sell-card__img-product"
                        data-cross-sell-card-img
                      >
                        {{ first_product_img }}
                      </div>
                    </div>
                    <div class="cross-sell-card__details-wrapper">
                      <div
                        class="cross-sell-card__details"
                        data-cross-sell-card-details
                      >
                        {% assign selected_color = variant[color_option_key] | downcase | default: nil %}
                  
                        <div class="cross-sell-card__title">
                          <a href="{{ cross_sell_product.url }}">{{ cross_sell_product.title }}</a>
                          {% if settings.product_card_color_option_name == 'beside' and selected_color %}
                            {{ 'templates.cart.recommendations.in' | t  }} 
                            <span data-variant-color-label>{{ selected_color | capitalize }}</span>
                          {% endif %}
                        </div>
                        {%- if settings.product_card_color_option_name == 'below' and selected_color -%}
                          <div
                            class="cross-sell-card__color"
                            data-variant-color-label
                          >
                            {{ selected_color | capitalize }}
                          </div>
                        {%- endif -%}
                  
                        {% comment %}Component price:default:1.0.0-pre.10 begin{% endcomment %}
                        {% render 'price', product: cross_sell_product %}
                        {% comment %}Component price:default:1.0.0-pre.10 end{% endcomment %}
                  
                        {% if color_array.size > 0 %}
                          {% if settings.product_card_color_option == 'swatches' %}
                            {% comment %}Component product-card-swatches:default:1.0.0-pre.10 begin{% endcomment %}
                            {% liquid
                              assign swatch_product_8f226786 = swatch_product
                              assign swatch_product = cross_sell_product
                            %}
                            {% comment %}
                              @param swatch_product {Product} [Required]
                                The product to draw the swatches for.
                            
                              @param color_array {Array} [Required]
                                An array of colors that need to be shown as swatches
                            
                              @param use_variant_images {Boolean} [Optional]
                                If true, will try and use a variant image instead of a swatch color, if one exists.
                            
                              @param variant_indices_array {Array} [Optional]
                                An array of variant indices that maps directly to the color array. This is useful for grabbing the direct variant.
                            
                              @param selected_color {String} [Optional]
                                The color that should be selected on load.
                            {% endcomment %}
                            
                            {% assign use_variant_images = use_variant_images | default: false %}
                            
                            <div data-component="product-card-swatches" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="product-card-swatches">
                              <div class="product-card-swatches__wrapper">
                                {% for next_color in color_array %}
                                  {% assign variant_image = blank %}
                                  {% if variant_indices_array %}
                                    {% assign variant_index = variant_indices_array[forloop.index0] | plus: 0 %}
                                    {% capture variant_index_attr %}
                                      data-variant-index="{{ variant_index }}"
                                    {% endcapture %}
                                  {% endif %}
                            
                                  <button
                                    class="product-card-swatches__swatch-button"
                                    data-swatch-button
                                    aria-label="{{ next_color }}"
                                    data-color="{{ next_color | downcase }}"
                                    {{ variant_index_attr }}
                                    data-selected="{%- if selected_color == next_color -%}selected{%- endif -%}"
                                  >
                                    {% if use_variant_images %}
                                      {% assign variant_index = variant_indices_array[forloop.index0] | plus: 0 %}
                                      {% assign variant_image = swatch_product.variants[variant_index].featured_media.preview_image %}
                                    {% endif %}
                            
                                    {% comment %}Component swatch:default:1.0.0-pre.10 begin{% endcomment %}
                                    {% liquid
                                      assign color_name_6cb08e37 = color_name
                                      assign color_name = next_color
                                      assign show_tooltip_6cb08e37 = show_tooltip
                                      assign show_tooltip = false
                                    %}
                                    {% comment %}
                                      @param color_name {String} [Required]
                                        Color name for which to find a suitable background
                                    
                                      @param variant_image {Boolean} [Optional]
                                        Will display a this variant image, instead of a swatch color.
                                    
                                      @param show_tooltip {Booleal} [Optional]
                                        If true, will show tooltip on hover of the swatch.
                                    {% endcomment %}
                                    
                                    {%- assign variant_image = variant_image | default: blank -%}
                                    
                                    {%- assign swatch_color = blank -%}
                                    {%- assign swatch_image = blank -%}
                                    {%- assign custom_colors = settings.swatches_custom_colors -%}
                                    
                                    {% comment %} First look for a defined custom color {% endcomment %}
                                    {%- assign custom_colors = custom_colors | newline_to_br | strip_newlines | split: '<br />' -%}
                                    {%- assign swatch_search_color = color_name | downcase -%}
                                    {%- for custom_entry in custom_colors -%}
                                      {%- assign custom_color = custom_entry | split: ':' -%}
                                      {%- assign custom_color_name = custom_color[0] | strip | downcase -%}
                                      {%- assign custom_color_value = custom_color[1] | strip -%}
                                      {%- if swatch_search_color == custom_color_name -%}
                                        {% assign swatch_color = custom_color_value %}
                                        {%- break -%}
                                      {%- endif -%}
                                    {%- endfor -%}
                                    
                                    {% comment %} Otherwise default to the raw color name, which will either be a
                                    valid named HTML color and displayed as such, or will be ignored by the browser. {% endcomment %}
                                    {%- if swatch_color == blank -%}
                                      {% assign swatch_color = color_name | replace: " ", "" | handleize %}
                                    {%- endif -%}
                                    
                                    {% comment %} Use a variant image for the swatch if one exists. {% endcomment %}
                                    {%- if variant_image != blank -%}
                                      {% assign swatch_image = variant_image %}
                                    {%- else -%}
                                      {% comment %} If not using variant images, look for a image that matches the color name in the theme's files. {% endcomment %}
                                      {% assign swatch_file_name = color_name | downcase | handleize | append: '.png' %}
                                      {%- if images[swatch_file_name] != blank -%}
                                        {%- assign swatch_image = images[swatch_file_name] -%}
                                      {%- endif -%}
                                    {%- endif -%}
                                    
                                    <div
                                      data-component="swatch"
                                      data-component-type="component"
                                      {% if tag != blank %}data-component-tag="{{ tag }}"
                                      {% endif %}class="swatch"
                                      {% if swatch_image == blank %}
                                        style="--swatch-color: {{ swatch_color }};"
                                      {% endif %}
                                    >
                                      <span class="swatch__label {% unless show_tooltip %}visually-hidden{% endunless %}">{{ color_name }}</span>
                                      <div
                                        class="
                                          swatch__fill
                                          swatch__fill--{{ settings.swatch_shape }}
                                        "
                                      >
                                        {% if swatch_image != blank %}
                                          {% comment %}Component lazy-img:default:1.0.0-pre.10 begin{% endcomment %}
                                          {% render 'lazy-img', img: swatch_image, size: '50x', crop_focus: 'center', lazy: true, canvas: true %}
                                          {% comment %}Component lazy-img:default:1.0.0-pre.10 end{% endcomment %}
                                        {% endif %}
                                      </div>
                                    </div>
                                    
                                    {% liquid
                                      assign color_name = color_name_6cb08e37
                                      assign color_name_6cb08e37 = nil
                                      assign show_tooltip = show_tooltip_6cb08e37
                                      assign show_tooltip_6cb08e37 = nil
                                    %}
                                    {% comment %}Component swatch:default:1.0.0-pre.10 end{% endcomment %}
                                  </button>
                                {% endfor %}
                              </div>
                              <button class="product-card-swatches__show-more hidden" data-swatches-show-more>
                                {{ 'products.swatches.show_more' | t: count: 'count' }}
                              </button>
                            </div>
                            
                            {% liquid
                              assign swatch_product = swatch_product_8f226786
                              assign swatch_product_8f226786 = nil
                            %}
                            {% comment %}Component product-card-swatches:default:1.0.0-pre.10 end{% endcomment %}
                          {% elsif settings.product_card_color_option == 'count' %}
                            <div class="cross-sell-card__colors-available">
                              {{ 'templates.cart.recommendations.colors_available' | t: count: color_array.size  }}
                            </div>
                          {% endif %}
                        {% endif %}
                        <div class="cross-sell-card__buttons {% if product_label %}cross-sell-card__buttons--has-label{%- endif -%}">
                          {{ product_label }}
                  
                          {% assign atc_text = 'templates.cart.recommendations.add_to_cart' | t %}
                          {% comment %}Component button:default:1.0.0-pre.10 begin{% endcomment %}
                          {% liquid
                            assign style_adab0a03 = style
                            assign style = 'text'
                            assign size_adab0a03 = size
                            assign size = 'small'
                            assign text_adab0a03 = text
                            assign text = atc_text
                            assign attributes_adab0a03 = attributes
                            assign attributes = 'data-cross-sell-card-atc'
                          %}
                          {% comment %}
                            @param style [Required]
                              This is the style of the button: primary, secondary, tertiary, or text. Default primary.
                          
                            @param size [Required]
                              This defines the size of the button: small, medium, or large. Default medium.
                          
                            @param text [Required]
                              This is the text to be included in the button.
                          
                            @param attributes [Optional]
                              This will include any additional attributes that the button needs. For example, aria-controls.
                          {% endcomment %}
                          
                          <button
                            data-component="button"
                            data-component-type="component"
                            {% if tag != blank %}data-component-tag="{{ tag }}"
                            {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                            {{ attributes }}
                          >
                            {{ text }}
                          </button>
                          
                          {% liquid
                            assign style = style_adab0a03
                            assign style_adab0a03 = nil
                            assign size = size_adab0a03
                            assign size_adab0a03 = nil
                            assign text = text_adab0a03
                            assign text_adab0a03 = nil
                            assign attributes = attributes_adab0a03
                            assign attributes_adab0a03 = nil
                          %}
                          {% comment %}Component button:default:1.0.0-pre.10 end{% endcomment %}
                        </div>
                      </div>
                      <div
                        class="cross-sell-card__form hidden"
                        data-cross-sell-card-form
                      >
                        {% comment %}Component variant-selector:default:1.0.0-pre.10 begin{% endcomment %}
                        {% liquid
                          assign product_af8de36e = product
                          assign product = cross_sell_product
                          assign selected_variant_af8de36e = selected_variant
                          assign selected_variant = variant
                        %}
                        {% comment %}
                          Display variant options for a product
                        
                          @param product
                            The product object
                        
                          @param selected_variant
                            The selected variant object
                        
                          @param form_id
                            The associated form ID
                        {% endcomment %}
                        
                        <div data-component="variant-selector" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="variant-selector">
                          {% if product.has_only_default_variant %}
                            <input
                              class="variant-selector__variants variant-selector__variants--default"
                              name="id"
                              {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                              type="hidden"
                              value="{{ product.variants.first.id }}"
                              data-variants
                            >
                          {% else %}
                            <label class="variant-selector__label">
                              {{ 'product.variants.options' | t }}
                        
                              <select
                                class="variant-selector__variants"
                                name="id"
                                {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                                data-variants
                              >
                                <option
                                  value=""
                                  disabled
                                  {% if selected_variant == blank %}selected{% endif %}
                                >
                                  {{ 'product.variants.choose_variant' | t }}
                                </option>
                                {% for variant in product.variants %}
                                  <option
                                    {% if selected_variant and selected_variant.id == variant.id %}selected{% endif %}
                                    value="{{ variant.id }}"
                                    {% unless variant.available %}disabled{% endunless %}
                                  >
                                    {{ variant.title }} - {{ variant.price | money }}
                                  </option>
                                {% endfor %}
                              </select>
                            </label>
                          {% endif %}
                        </div>
                        
                        {% liquid
                          assign product = product_af8de36e
                          assign product_af8de36e = nil
                          assign selected_variant = selected_variant_af8de36e
                          assign selected_variant_af8de36e = nil
                        %}
                        {% comment %}Component variant-selector:default:1.0.0-pre.10 end{% endcomment %}
                        {% comment %}Component options-selector:default:1.0.0-pre.10 begin{% endcomment %}
                        {% liquid
                          assign product_e3df1209 = product
                          assign product = cross_sell_product
                          assign product_option_style_e3df1209 = product_option_style
                          assign product_option_style = 'dropdowns'
                          assign sold_out_options_e3df1209 = sold_out_options
                          assign sold_out_options = 'hidden'
                          assign swatches_enable_e3df1209 = swatches_enable
                          assign swatches_enable = false
                          assign selected_variant_e3df1209 = selected_variant
                          assign selected_variant = variant
                        %}
                        {% comment %}
                          Display variant options for a product
                        
                          @param product
                            The product object
                        
                          @param product_option_style
                        
                          @param sold_out_options
                        
                          @param swatches_enable
                        
                          @param swatches_option_style
                        
                          @param selected_variant
                            The selected variant object
                        {% endcomment %}
                        
                        {% comment %}UUID options_selector_id begin{% endcomment %}
                        {% assign options_selector_id = 'b93e1d28-f154-4246-83e6-11700ce0d150' %}
                        {% comment %}UUID options_selector_id end{% endcomment %}
                        {% liquid
                          assign style = product_option_style
                          assign sold_out_options = sold_out_options
                          assign enable_swatches = swatches_enable
                          assign show_variant_images = false
                          if swatches_option_style == 'variant_image'
                            assign show_variant_images = true
                          endif
                        %}
                        
                        <div
                          data-component="options-selector"
                          data-component-type="component"
                          {% if tag != blank %}data-component-tag="{{ tag }}"
                          {% endif %}class="options-selector"
                          {% if sold_out_options == 'disabled' %}data-disable-unavailable{% endif %}
                          {% if sold_out_options == 'hidden' %}data-remove-unavailable{% endif %}
                          {% if product.has_only_default_variant %}hidden{% endif %}
                        >
                          <script
                            type="application/json"
                            data-component-data
                          >
                            {
                              "disable_unavailable": {% if sold_out_options == 'disabled' %}true{% else %}false{% endif %},
                              "remove_unavailable": {% if sold_out_options == 'hidden' %}true{% else %}false{% endif %}
                            }
                          </script>
                        
                          {% for option in product.options_with_values %}
                            {% assign input_id = options_selector_id | append: '-' | append: forloop.index %}
                            {% assign option_index = forloop.index0 %}
                            {% assign show_swatches = false %}
                            {% if enable_swatches and option.name == 'Color' %}
                              {% assign show_swatches = true %}
                            {% endif %}
                        
                            {% if style == 'select' and show_swatches == false %}
                              {% comment %}Component option-dropdown:default:1.0.0-pre.10 begin{% endcomment %}
                              {% comment %}
                                Display option as a select
                              
                                @param option [Required]
                                  The option to display
                              
                                @param input_id [Required]
                                  The option id to apply to the label and input
                              
                                @param selected_variant [Optional]
                                  The selected variant to optionally default to
                              {% endcomment %}
                              
                              <div data-component="option-dropdown" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="option-dropdown">
                                <script
                                  type="application/json"
                                  data-component-data
                                >
                                  {
                                    "chosen_option": {{ option.name | json }},
                                    "choose_option": {{ 'product.options.choose_option' | t: option: option.name | json }},
                                    "position": {{ option.position | json }}
                                  }
                                </script>
                              
                                {% capture options %}
                                  {% unless selected_variant %}
                                    <option
                                      value=""
                                      disabled
                                      selected
                                    >
                                      {{ 'product.options.choose_option' | t: option: option.name }}
                                    </option>
                                  {% endunless %}
                                  {% for value in option.values %}
                                    <option
                                      value="{{ value | escape }}"
                                      {% if selected_variant and option.selected_value == value %}selected{% endif %}
                                    >
                                      {{ value }}
                                    </option>
                                  {% endfor %}
                                {% endcapture %}
                                {% liquid
                                  assign label_text = 'product.options.choose_option' | t: option: option.name
                              
                                  if selected_variant
                                    assign label_text = option.name
                                  endif
                                %}
                                {% comment %}Component input-select:default:1.0.0-pre.10 begin{% endcomment %}
                                {% comment %}
                                  @param label_text [Required]
                                    The text for the label to be included.
                                
                                  @param options [Required]
                                    The list of options to include in the select.
                                
                                  @param form_id [Optional]
                                    The form id to associate with
                                
                                  @param input_id [Optional]
                                    The option id to apply to the label and input
                                
                                  @param field_name [Optional]
                                    The field name for the form. Will be used for the "name" attribute.
                                
                                  @param attributes [Optional]
                                    Additional attributes to append to the input field.
                                {% endcomment %}
                                
                                {% if input_id == blank %}
                                  {% comment %}UUID input_id begin{% endcomment %}
                                  {% assign input_id = '56a94096-8236-4bca-bd98-ce9a4401baaa' %}
                                  {% comment %}UUID input_id end{% endcomment %}
                                {% endif %}
                                
                                <div data-component="input-select" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="input-select">
                                  <label class="input-select__label" for="{{ input_id }}" data-label>{{ label_text }}</label>
                                  <div class="input-select__wrapper">
                                    <select
                                      id="{{ input_id }}"
                                      class="input-select__select"
                                      {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                                      {% if field_name != blank %}name="{{ field_name }}"{% endif %}
                                      {{ attributes }}
                                      data-input
                                    >
                                      {{ options }}
                                    </select>
                                  </div>
                                </div>
                                
                                {% comment %}Component input-select:default:1.0.0-pre.10 end{% endcomment %}
                              </div>
                              
                              {% comment %}Component option-dropdown:default:1.0.0-pre.10 end{% endcomment %}
                            {% else %}
                              {% comment %}Component option-selectable-boxes:default:1.0.0-pre.10 begin{% endcomment %}
                              {% comment %}
                                Display option as a selectable boxes, optionally as swatches
                              
                                @param option [Required]
                                  The option to display
                              
                                @param product [Required]
                                  The product object
                              
                                @param input_id [Required]
                                  The option id to apply to the label and input
                              
                                @param selected_variant [Optional]
                                  The selected variant to optionally default to
                              
                                @param show_swatches [Optional]
                                  Whether to display fieldset as swatches instead of radios
                              
                                @param show_variant_images [Optional]
                                  Whether to display variant images inside of swatch
                              {% endcomment %}
                              <div
                                data-component="option-selectable-boxes"
                                data-component-type="component"
                                {% if tag != blank %}data-component-tag="{{ tag }}"
                                {% endif %}class="option-selectable-boxes"
                              >
                                <script
                                  type="application/json"
                                  data-component-data
                                >
                                  {
                                    "chosen_option": {{ 'product.options.chosen_option_html' | t: option: option.name, value: '|value|' | json }},
                                    "choose_option": {{ 'product.options.choose_option' | t: option: option.name | json }},
                                    "position": {{ option.position | json }}
                                  }
                                </script>
                              
                                {% capture values %}
                                  {% liquid
                                    assign group_name = option.name | append: section.id | url_encode
                              
                                    if show_swatches and show_variant_images
                                      comment
                                        The following builds out several variables that are used within this and other sub-components:
                                          - option_value_array which contains the names of all of the option value variants for this product
                                          - variant_indices_array which contains an the indices of the variants which are in the option_value_array
                                      endcomment
                              
                                      assign option_key =  'option' | append: option.position
                                      assign option_value_variants_added = '|'
                                      assign variant_indices_string = ''
                              
                                      for next_variant in product.variants
                                        assign search_string = '|' | append: next_variant[option_key] | append: '|'
                                        unless option_value_variants_added contains search_string
                                          if next_variant.featured_image != blank
                                            assign option_value_variants_added = option_value_variants_added | append: next_variant[option_key] | append: '|'
                                            assign variant_indices_string = variant_indices_string | append: '|' | append: forloop.index0
                                          endif
                                        endunless
                                      endfor
                              
                                      assign option_value_array = option_value_variants_added | remove_first: '|' | split: '|'
                                      assign variant_indices_array = variant_indices_string | remove_first: '|' | split: '|'
                                    endif
                                  %}
                              
                                  {% for value in option.values %}
                                    {% liquid
                                      assign value_input_id = input_id | append: '-' | append: forloop.index
                                      assign checked = false
                              
                                      if selected_variant and option.selected_value == value
                                        assign checked = true
                                      endif
                                    %}
                              
                                    {% if show_swatches %}
                                      {% liquid
                                        assign image = blank
                                        if show_variant_images
                                          for option_value in option_value_array
                                            if option_value == value
                                              assign variant_index = variant_indices_array[forloop.index0] | times: 1
                                              assign image = product.variants[variant_index].featured_image
                                              break
                                            endif
                                          endfor
                                        endif
                                      %}
                                      {% comment %}Component input-swatch:default:1.0.0-pre.10 begin{% endcomment %}
                                      {% liquid
                                        assign label_text_e89ba85d = label_text
                                        assign label_text = value
                                        assign input_value_e89ba85d = input_value
                                        assign input_value = value
                                        assign input_id_e89ba85d = input_id
                                        assign input_id = value_input_id
                                      %}
                                      {% comment %}
                                        @param label_text [Required]
                                          The text for the label to be included.
                                      
                                        @param group_name [Required]
                                          The group name the radio belongs to.
                                      
                                        @param input_value [Required]
                                          The input value.
                                      
                                        @param input_id [Optional]
                                          The option id to apply to the label and input
                                      
                                        @param attributes [Optional]
                                          Additional attributes to append to the input field.
                                      
                                        @param image [Optional]
                                          Image to display as swatch
                                      {% endcomment %}
                                      
                                      {% if input_id == blank %}
                                        {% comment %}UUID input_id begin{% endcomment %}
                                        {% assign input_id = '80678545-6a24-4e24-a85e-e6a8f64f2bdb' %}
                                        {% comment %}UUID input_id end{% endcomment %}
                                      {% endif %}
                                      {% liquid
                                        assign required = required | default: false
                                        assign disabled = disabled | default: false
                                        assign checked = checked | default: false
                                        assign unavailable = unavailable | default: false
                                      %}
                                      
                                      <div
                                        data-component="input-swatch"
                                        data-component-type="component"
                                        {% if tag != blank %}data-component-tag="{{ tag }}"
                                        {% endif %}class="
                                          input-swatch
                                          input-swatch__fill--{{ settings.swatch_shape }}
                                        "
                                        {% if disabled %}data-disabled{% endif %}
                                        {% if checked %}data-checked{% endif %}
                                        {% if unavailable %}data-unavailable{% endif %}
                                      >
                                        <input
                                          id="{{ input_id }}"
                                          class="input-swatch__input"
                                          type="radio"
                                          name="{{ group_name }}"
                                          value="{{ input_value }}"
                                          tabindex="0"
                                          aria-label="{{ input_value | escape }}"
                                          {% if required %}required{% endif %}
                                          {% if disabled %}disabled{% endif %}
                                          {% if checked %}checked{% endif %}
                                          {{ attributes }}
                                          data-input
                                        >
                                      
                                        <label class="input-swatch__label visually-hidden" for="{{ input_id }}">{{ label_text }}</label>
                                      
                                        {% comment %}Component swatch:default:1.0.0-pre.10 begin{% endcomment %}
                                        {% liquid
                                          assign color_name_78ca557b = color_name
                                          assign color_name = value
                                          assign variant_image_78ca557b = variant_image
                                          assign variant_image = image
                                        %}
                                        {% comment %}
                                          @param color_name {String} [Required]
                                            Color name for which to find a suitable background
                                        
                                          @param variant_image {Boolean} [Optional]
                                            Will display a this variant image, instead of a swatch color.
                                        
                                          @param show_tooltip {Booleal} [Optional]
                                            If true, will show tooltip on hover of the swatch.
                                        {% endcomment %}
                                        
                                        {%- assign variant_image = variant_image | default: blank -%}
                                        
                                        {%- assign swatch_color = blank -%}
                                        {%- assign swatch_image = blank -%}
                                        {%- assign custom_colors = settings.swatches_custom_colors -%}
                                        
                                        {% comment %} First look for a defined custom color {% endcomment %}
                                        {%- assign custom_colors = custom_colors | newline_to_br | strip_newlines | split: '<br />' -%}
                                        {%- assign swatch_search_color = color_name | downcase -%}
                                        {%- for custom_entry in custom_colors -%}
                                          {%- assign custom_color = custom_entry | split: ':' -%}
                                          {%- assign custom_color_name = custom_color[0] | strip | downcase -%}
                                          {%- assign custom_color_value = custom_color[1] | strip -%}
                                          {%- if swatch_search_color == custom_color_name -%}
                                            {% assign swatch_color = custom_color_value %}
                                            {%- break -%}
                                          {%- endif -%}
                                        {%- endfor -%}
                                        
                                        {% comment %} Otherwise default to the raw color name, which will either be a
                                        valid named HTML color and displayed as such, or will be ignored by the browser. {% endcomment %}
                                        {%- if swatch_color == blank -%}
                                          {% assign swatch_color = color_name | replace: " ", "" | handleize %}
                                        {%- endif -%}
                                        
                                        {% comment %} Use a variant image for the swatch if one exists. {% endcomment %}
                                        {%- if variant_image != blank -%}
                                          {% assign swatch_image = variant_image %}
                                        {%- else -%}
                                          {% comment %} If not using variant images, look for a image that matches the color name in the theme's files. {% endcomment %}
                                          {% assign swatch_file_name = color_name | downcase | handleize | append: '.png' %}
                                          {%- if images[swatch_file_name] != blank -%}
                                            {%- assign swatch_image = images[swatch_file_name] -%}
                                          {%- endif -%}
                                        {%- endif -%}
                                        
                                        <div
                                          data-component="swatch"
                                          data-component-type="component"
                                          {% if tag != blank %}data-component-tag="{{ tag }}"
                                          {% endif %}class="swatch"
                                          {% if swatch_image == blank %}
                                            style="--swatch-color: {{ swatch_color }};"
                                          {% endif %}
                                        >
                                          <span class="swatch__label {% unless show_tooltip %}visually-hidden{% endunless %}">{{ color_name }}</span>
                                          <div
                                            class="
                                              swatch__fill
                                              swatch__fill--{{ settings.swatch_shape }}
                                            "
                                          >
                                            {% if swatch_image != blank %}
                                              {% comment %}Component lazy-img:default:1.0.0-pre.10 begin{% endcomment %}
                                              {% render 'lazy-img', img: swatch_image, size: '50x', crop_focus: 'center', lazy: true, canvas: true %}
                                              {% comment %}Component lazy-img:default:1.0.0-pre.10 end{% endcomment %}
                                            {% endif %}
                                          </div>
                                        </div>
                                        
                                        {% liquid
                                          assign color_name = color_name_78ca557b
                                          assign color_name_78ca557b = nil
                                          assign variant_image = variant_image_78ca557b
                                          assign variant_image_78ca557b = nil
                                        %}
                                        {% comment %}Component swatch:default:1.0.0-pre.10 end{% endcomment %}
                                      </div>
                                      
                                      {% liquid
                                        assign label_text = label_text_e89ba85d
                                        assign label_text_e89ba85d = nil
                                        assign input_value = input_value_e89ba85d
                                        assign input_value_e89ba85d = nil
                                        assign input_id = input_id_e89ba85d
                                        assign input_id_e89ba85d = nil
                                      %}
                                      {% comment %}Component input-swatch:default:1.0.0-pre.10 end{% endcomment %}
                                    {% else %}
                                      {% comment %}Component input-radio:default:1.0.0-pre.10 begin{% endcomment %}
                                      {% liquid
                                        assign label_text_d3986ed0 = label_text
                                        assign label_text = value
                                        assign input_value_d3986ed0 = input_value
                                        assign input_value = value
                                        assign input_id_d3986ed0 = input_id
                                        assign input_id = value_input_id
                                      %}
                                      {% comment %}
                                        @param label_text [Required]
                                          The text for the label to be included.
                                      
                                        @param group_name [Required]
                                          The group name the radio belongs to.
                                      
                                        @param input_value [Required]
                                          The input value.
                                      
                                        @param input_id [Optional]
                                          The option id to apply to the label and input
                                      
                                        @param required [Optional]
                                          Whether the input is required
                                      
                                        @param disabled [Optional]
                                          Whether the input is disabled
                                      
                                        @param checked [Optional]
                                          Whether the input is checked
                                      
                                        @param unavailable [Optional]
                                          Whether the input is unavailable
                                      
                                        @param attributes [Optional]
                                          Additional attributes to append to the input field.
                                      {% endcomment %}
                                      
                                      {% if input_id == blank %}
                                        {% comment %}UUID input_id begin{% endcomment %}
                                        {% assign input_id = '8dea9279-af27-4144-87bf-3adc19e537e3' %}
                                        {% comment %}UUID input_id end{% endcomment %}
                                      {% endif %}
                                      {% liquid
                                        assign required = required | default: false
                                        assign disabled = disabled | default: false
                                        assign checked = checked | default: false
                                        assign unavailable = unavailable | default: false
                                      %}
                                      
                                      <div
                                        data-component="input-radio"
                                        data-component-type="component"
                                        {% if tag != blank %}data-component-tag="{{ tag }}"
                                        {% endif %}class="input-radio"
                                        {% if disabled %}data-disabled{% endif %}
                                        {% if checked %}data-checked{% endif %}
                                        {% if unavailable %}data-unavailable{% endif %}
                                      >
                                        <input
                                          class="input-radio__input"
                                          id="{{ input_id }}"
                                          type="radio"
                                          name="{{ group_name }}"
                                          value="{{ input_value | escape }}"
                                          tabindex="0"
                                          aria-label="{{ input_value | escape }}"
                                          {% if required %}required{% endif %}
                                          {% if disabled %}disabled{% endif %}
                                          {% if checked %}checked{% endif %}
                                          {{ attributes }}
                                          data-input
                                        >
                                      
                                        <label class="input-radio__label" for="{{ input_id }}">{{ label_text }}</label>
                                      </div>
                                      
                                      {% liquid
                                        assign label_text = label_text_d3986ed0
                                        assign label_text_d3986ed0 = nil
                                        assign input_value = input_value_d3986ed0
                                        assign input_value_d3986ed0 = nil
                                        assign input_id = input_id_d3986ed0
                                        assign input_id_d3986ed0 = nil
                                      %}
                                      {% comment %}Component input-radio:default:1.0.0-pre.10 end{% endcomment %}
                                    {% endif %}
                                  {% endfor %}
                                {% endcapture %}
                                {% liquid
                                  assign label_text = 'product.options.choose_option' | t: option: option.name
                                  assign option_value_html = '<span>' | append: option.selected_value | append: '</span>'
                              
                                  if selected_variant
                                    assign label_text = 'product.options.chosen_option_html' | t: option: option.name, value: option_value_html
                                  endif
                                %}
                                {% comment %}Component input-fieldset:default:1.0.0-pre.10 begin{% endcomment %}
                                {% comment %}
                                  @param label_text [Required]
                                    The text for the label to be included.
                                
                                  @param values [Required]
                                    The list of values to include in the fieldset.
                                
                                  @param form_id [Optional]
                                    The form id to associate with
                                
                                  @param field_name [Optional]
                                    The field name for the form. Will be used for the "name" attribute.
                                
                                  @param attributes [Optional]
                                    Additional attributes to append to the input field.
                                {% endcomment %}
                                
                                <fieldset
                                  data-component="input-fieldset"
                                  data-component-type="component"
                                  {% if tag != blank %}data-component-tag="{{ tag }}"
                                  {% endif %}class="input-fieldset"
                                  {% unless name == blank %}name="{{ field_name }}"{% endunless %}
                                  {% unless form_id == blank %}form="{{ form_id }}"{% endunless %}
                                  {{ attributes }}
                                >
                                  <legend class="input-fieldset__legend" data-label>{{ label_text }}</legend>
                                
                                  <div class="input-fieldset__values">
                                    {{ values }}
                                  </div>
                                </fieldset>
                                
                                {% comment %}Component input-fieldset:default:1.0.0-pre.10 end{% endcomment %}
                              </div>
                              
                              {% comment %}Component option-selectable-boxes:default:1.0.0-pre.10 end{% endcomment %}
                            {% endif %}
                          {% endfor %}
                        </div>
                        
                        {% liquid
                          assign product = product_e3df1209
                          assign product_e3df1209 = nil
                          assign product_option_style = product_option_style_e3df1209
                          assign product_option_style_e3df1209 = nil
                          assign sold_out_options = sold_out_options_e3df1209
                          assign sold_out_options_e3df1209 = nil
                          assign swatches_enable = swatches_enable_e3df1209
                          assign swatches_enable_e3df1209 = nil
                          assign selected_variant = selected_variant_e3df1209
                          assign selected_variant_e3df1209 = nil
                        %}
                        {% comment %}Component options-selector:default:1.0.0-pre.10 end{% endcomment %}
                        {% comment %}Component buy-buttons:default:1.0.0-pre.10 begin{% endcomment %}
                        {% liquid
                          assign product_25203a39 = product
                          assign product = cross_sell_product
                          assign is_variant_selected_25203a39 = is_variant_selected
                          assign is_variant_selected = true
                          assign selected_variant_25203a39 = selected_variant
                          assign selected_variant = variant
                          assign show_dynamic_checkout_25203a39 = show_dynamic_checkout
                          assign show_dynamic_checkout = false
                          assign exclude_surface_pickup_25203a39 = exclude_surface_pickup
                          assign exclude_surface_pickup = true
                        %}
                        {% comment %}
                          @param product [Required]
                        
                          @param is_variant_selected [Optional]
                        
                          @param selected_variant [Optional]
                        
                          @param form_id [Optional]
                        
                          @param show_dynamic_checkout [Optional]
                        {% endcomment %}
                        
                        <div data-component="buy-buttons" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="buy-buttons">
                          <script
                            type="application/json"
                            data-component-data
                          >
                            {
                              "unavailable": "{{ 'product.buy_buttons.unavailable' | t }}",
                              "soldOut": "{{ 'product.buy_buttons.sold_out' | t }}",
                              "addToCart": "{{ 'product.buy_buttons.add_to_cart' | t }}"
                            }
                          </script>
                          {% capture buy_buttons %}
                              {% liquid
                                assign attributes = ''
                                assign text = ''
                                assign state = ''
                        
                                if product == blank
                                  assign text = 'product.buy_buttons.unavailable' | t
                                  assign attributes = 'disabled'
                                  assign state = 'unavailable'
                                elsif selected_variant
                                  if selected_variant.available
                                    assign text = 'product.buy_buttons.add_to_cart' | t
                                    assign state = 'available'
                                  else
                                    assign text = 'product.buy_buttons.sold_out' | t
                                    assign attributes = 'disabled'
                                    assign state = 'sold out'
                                  endif
                                elsif is_variant_selected
                                  assign text = 'product.buy_buttons.unavailable' | t
                                  assign attributes = 'disabled'
                                  assign state = 'unavailable'
                                else
                                  assign text = 'product.buy_buttons.select_variant' | t
                                  assign attributes = 'disabled'
                                endif
                              %}
                        
                              {% comment %}Component button-action:default:1.0.0-pre.10 begin{% endcomment %}
                              {% liquid
                                assign style_06c06e40 = style
                                assign style = 'primary'
                                assign size_06c06e40 = size
                                assign size = 'medium'
                              %}
                              {% comment %}
                                @param style [Required]
                                  This is the style of the button: primary, secondary, or tertiary. Default primary.
                              
                                @param size [Required]
                                  This defines the size of the button: small, medium, or large. Default medium.
                              
                                @param text [Required]
                                  This is the text to be included in the button.
                              
                                @param attributes [Optional]
                                  This will include any additional attributes that the button needs. For example, aria-controls.
                              {% endcomment %}
                              
                              <button
                                data-component="button-action"
                                data-component-type="component"
                                {% if tag != blank %}data-component-tag="{{ tag }}"
                                {% endif %}class="button-action button-action--{{ style }} button-action--{{ size }}{% if style == 'primary' or style == 'secondary' %} button-action--shadow{% endif %%}"
                                aria-busy="false"
                                aria-live="polite"
                                {{ attributes }}
                              >
                                {{ text }}
                              </button>
                              
                              {% liquid
                                assign style = style_06c06e40
                                assign style_06c06e40 = nil
                                assign size = size_06c06e40
                                assign size_06c06e40 = nil
                              %}
                              {% comment %}Component button-action:default:1.0.0-pre.10 end{% endcomment %}
                        
                              {% assign attributes = nil %}
                          {% endcapture %}
                        
                          {% if product != blank %}
                            {% form 'product', product, id: form_id, class: 'buy-buttons__form' %}
                              <div class="buy-buttons__buttons{% if show_dynamic_checkout %} buy-buttons__buttons--dynamic-checkout{% endif %}">
                                {% comment %}Component notification:default:1.0.0-pre.10 begin{% endcomment %}
                                {% liquid
                                  assign type_2bfb61b9 = type
                                  assign type = 'error'
                                  assign contents_2bfb61b9 = contents
                                  assign contents = ''
                                  assign hidden_2bfb61b9 = hidden
                                  assign hidden = true
                                %}
                                {%- comment -%}
                                  @param content [Required]
                                    The content that goes in the notification banner
                                
                                  @param type [Required]
                                    The type of notification banner ('error' or 'success')
                                
                                  @param hidden [Optional]
                                    Whether the notification should be hidden
                                {%- endcomment -%}
                                
                                <div
                                  data-component="notification"
                                  data-component-type="component"
                                  {% if tag != blank %}data-component-tag="{{ tag }}"
                                  {% endif %}class="
                                    notification
                                    notification--{{ type }}
                                  "
                                  {% if type == 'error' %}
                                    role="alert"
                                  {% else %}
                                    role="status"
                                  {% endif %}
                                  {% if hidden %}hidden{% endif %}
                                >
                                  {{ content }}
                                </div>
                                
                                {% liquid
                                  assign type = type_2bfb61b9
                                  assign type_2bfb61b9 = nil
                                  assign contents = contents_2bfb61b9
                                  assign contents_2bfb61b9 = nil
                                  assign hidden = hidden_2bfb61b9
                                  assign hidden_2bfb61b9 = nil
                                %}
                                {% comment %}Component notification:default:1.0.0-pre.10 end{% endcomment %}
                        
                                {{ buy_buttons }}
                        
                                {% if show_dynamic_checkout and is_variant_selected and selected_variant.available %}
                                  {{ form | payment_button }}
                                {% endif %}
                              </div>
                              {% unless exclude_surface_pickup %}
                                {% comment %}Component surface-pick-up:default:1.0.0-pre.10 begin{% endcomment %}
                                {% assign pick_up_availabilities = selected_variant.store_availabilities | where: 'pick_up_enabled', true %}
                                
                                <div data-component="surface-pick-up" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="surface-pick-up{%- unless selected_variant.available and pick_up_availabilities.size > 0 %} surface-pick-up--hidden{% endunless -%}">
                                  <template data-drawer-header-template>
                                    <h2 class="h4 surface-pick-up-drawer__heading">{{ product.title }}</h2>
                                    {% unless product.has_only_default_variant %}<span class="surface-pick-up-drawer__subheading">{{ selected_variant.title }}</span>{% endunless %}
                                  </template>
                                
                                  <template data-drawer-template>
                                    {% comment %}Component surface-pick-up-drawer:default:1.0.0-pre.10 begin{% endcomment %}
                                    <div data-component="surface-pick-up-drawer" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="surface-pick-up-drawer">
                                      {% assign pick_up_availabilities = selected_variant.store_availabilities | where: 'pick_up_enabled', true %}
                                      {% if selected_variant.available and pick_up_availabilities.size > 0 %}
                                        {%- assign closest_location_country_code = pick_up_availabilities.first.location.address.country_code -%}
                                        {%- assign imperialSystemCountries = 'US,MM,LR'  | split: ',' -%}
                                        {%- if imperialSystemCountries contains closest_location_country_code -%}
                                          {%- assign unit_system = 'imperial' -%}
                                        {%- else -%}
                                          {%- assign unit_system = 'metric' -%}
                                        {%- endif -%}
                                        <ul class="surface-pick-up-items" role="list">
                                          {% for location in pick_up_availabilities %}
                                            <li
                                              class="surface-pick-up-item surface-pick-up-item--{% if location.available %}available{% else %}unavailable{% endif %}"
                                              data-surface-pick-up-item
                                            >
                                              {% if location.available %}
                                                <span class="surface-pick-up-item__in-stock-icon">{% comment %}Icon check:default:1.0.0-pre.0 begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="currentColor" stroke-width="1.5" d="m1.47 9.63 4.61 3.768 8.45-9.796"/></svg>
{% comment %}Icon check:default:1.0.0-pre.0 end{% endcomment %}</span>
                                              {% else %}
                                                <span class="surface-pick-up-item__out-of-stock-icon">{% comment %}Icon cross:default:1.0.0-pre.0 begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 13 13"><path d="m1.47 2.53 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm4.5 4.5 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm1.06 0 4.5-4.5-1.06-1.06-4.5 4.5 1.06 1.06Zm3.44-5.56-9 9 1.06 1.06 9-9-1.06-1.06Z"/></svg>
{% comment %}Icon cross:default:1.0.0-pre.0 end{% endcomment %}</span>
                                              {% endif %}
                                    
                                              <div class="surface-pick-up-item__header">
                                                <h3 class="surface-pick-up-item__pick-up-location">{{ location.location.name }}</h3>
                                                <p
                                                  class="surface-pick-up-item__pick-up-distance"
                                                >
                                                  <span
                                                    data-distance
                                                    data-latitude="{{ location.location.latitude }}"
                                                    data-longitude="{{ location.location.longitude }}"
                                                  >
                                                  </span>
                                                  <span
                                                    data-distance-unit="{{ unit_system }}"
                                                  >
                                                    {%- if unit_system == 'imperial' -%}
                                                      {{ 'store_availability.general.miles' | t }}
                                                    {%- else -%}
                                                      {{ 'store_availability.general.kilometers' | t }}
                                                    {%- endif -%}
                                                  </span>
                                                </p>
                                              </div>
                                    
                                              <div class="surface-pick-up-item__availability">
                                                {% if location.available %}
                                                  {% assign pick_up_time = location.pick_up_time | downcase %}
                                                  {{ 'store_availability.general.available_for_pick_up_at_time_html' | t: pick_up_time: pick_up_time }}
                                                {% else %}
                                                  {{ 'store_availability.general.unavailable_for_pick_up_at_time_html' | t }}
                                                {% endif %}
                                              </div>
                                    
                                              <address class="surface-pick-up-item__address-info">
                                                {{ location.location.address | format_address }}
                                                {%- if location.location.phone.size > 0 %}
                                                  <a href="tel:{{ location.location.phone }}">{{ location.location.phone }}</a>
                                                {%- endif -%}
                                              </address>
                                            </li>
                                          {% endfor %}
                                        </ul>
                                      {% endif %}
                                    </div>
                                    
                                    {% comment %}Component surface-pick-up-drawer:default:1.0.0-pre.10 end{% endcomment %}
                                  </template>
                                
                                  {% if selected_variant.available and pick_up_availabilities.size > 0 %}
                                    {% assign closest_location = pick_up_availabilities.first %}
                                
                                    <div class="surface-pick-up-embed surface-pick-up-embed--{% if closest_location.available %}available{% else %}unavailable{% endif %}">
                                      {% if closest_location.available %}
                                        <span class="surface-pick-up-embed__in-stock-icon">{% comment %}Icon check:default:1.0.0-pre.0 begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="currentColor" stroke-width="1.5" d="m1.47 9.63 4.61 3.768 8.45-9.796"/></svg>
{% comment %}Icon check:default:1.0.0-pre.0 end{% endcomment %}</span>
                                      {% else %}
                                        <span class="surface-pick-up-embed__out-of-stock-icon">{% comment %}Icon cross:default:1.0.0-pre.0 begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 13 13"><path d="m1.47 2.53 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm4.5 4.5 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm1.06 0 4.5-4.5-1.06-1.06-4.5 4.5 1.06 1.06Zm3.44-5.56-9 9 1.06 1.06 9-9-1.06-1.06Z"/></svg>
{% comment %}Icon cross:default:1.0.0-pre.0 end{% endcomment %}</span>
                                      {% endif %}
                                
                                      <div class="surface-pick-up-embed__location-info">
                                        {% if closest_location.available %}
                                          <h3 class="surface-pick-up-embed__location-availability">{{ 'store_availability.general.available_for_pick_up_at_html' | t: location_name: closest_location.location.name }}</h3>
                                          <small class="surface-pick-up-embed__location-pick-up-time">{{ closest_location.pick_up_time }}</small>
                                        {% else %}
                                          <h3 class="surface-pick-up-embed__location-availability">{{ 'store_availability.general.unavailable_for_pick_up_at_html' | t: location_name: closest_location.location.name }}</h3>
                                        {% endif %}
                                      </div>
                                
                                      {% assign text = 'store_availability.general.view_store_info' | t %}
                                      {% if pick_up_availabilities.size > 1 %}
                                        {% assign text = 'store_availability.general.check_other_stores' | t %}
                                      {% endif %}
                                      {% comment %}Component button:default:1.0.0-pre.10 begin{% endcomment %}
                                      {% liquid
                                        assign style_829c1729 = style
                                        assign style = 'text'
                                        assign size_829c1729 = size
                                        assign size = 'small'
                                        assign attributes_829c1729 = attributes
                                        assign attributes = 'type="button" aria-haspopup="dialog"'
                                      %}
                                      {% comment %}
                                        @param style [Required]
                                          This is the style of the button: primary, secondary, tertiary, or text. Default primary.
                                      
                                        @param size [Required]
                                          This defines the size of the button: small, medium, or large. Default medium.
                                      
                                        @param text [Required]
                                          This is the text to be included in the button.
                                      
                                        @param attributes [Optional]
                                          This will include any additional attributes that the button needs. For example, aria-controls.
                                      {% endcomment %}
                                      
                                      <button
                                        data-component="button"
                                        data-component-type="component"
                                        {% if tag != blank %}data-component-tag="{{ tag }}"
                                        {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                                        {{ attributes }}
                                      >
                                        {{ text }}
                                      </button>
                                      
                                      {% liquid
                                        assign style = style_829c1729
                                        assign style_829c1729 = nil
                                        assign size = size_829c1729
                                        assign size_829c1729 = nil
                                        assign attributes = attributes_829c1729
                                        assign attributes_829c1729 = nil
                                      %}
                                      {% comment %}Component button:default:1.0.0-pre.10 end{% endcomment %}
                                    </div>
                                  {% endif %}
                                </div>
                                
                                {% comment %}Component surface-pick-up:default:1.0.0-pre.10 end{% endcomment %}
                              {% endunless %}
                            {% endform %}
                          {% else %}
                            <div class="buy-buttons__buttons{% if show_dynamic_checkout %} buy-buttons__buttons--dynamic-checkout{% endif %}">
                              {{ buy_buttons }}
                            </div>
                          {% endif %}
                        </div>
                        
                        {% liquid
                          assign product = product_25203a39
                          assign product_25203a39 = nil
                          assign is_variant_selected = is_variant_selected_25203a39
                          assign is_variant_selected_25203a39 = nil
                          assign selected_variant = selected_variant_25203a39
                          assign selected_variant_25203a39 = nil
                          assign show_dynamic_checkout = show_dynamic_checkout_25203a39
                          assign show_dynamic_checkout_25203a39 = nil
                          assign exclude_surface_pickup = exclude_surface_pickup_25203a39
                          assign exclude_surface_pickup_25203a39 = nil
                        %}
                        {% comment %}Component buy-buttons:default:1.0.0-pre.10 end{% endcomment %}
                  
                        <div class="cross-sell-card__buttons cross-sell-card__buttons--form">
                          {% assign back_text = 'templates.cart.recommendations.back' | t %}
                          {% comment %}Component button:default:1.0.0-pre.10 begin{% endcomment %}
                          {% liquid
                            assign style_1c0554e6 = style
                            assign style = 'text'
                            assign size_1c0554e6 = size
                            assign size = 'small'
                            assign text_1c0554e6 = text
                            assign text = back_text
                            assign attributes_1c0554e6 = attributes
                            assign attributes = 'data-cross-sell-card-back'
                          %}
                          {% comment %}
                            @param style [Required]
                              This is the style of the button: primary, secondary, tertiary, or text. Default primary.
                          
                            @param size [Required]
                              This defines the size of the button: small, medium, or large. Default medium.
                          
                            @param text [Required]
                              This is the text to be included in the button.
                          
                            @param attributes [Optional]
                              This will include any additional attributes that the button needs. For example, aria-controls.
                          {% endcomment %}
                          
                          <button
                            data-component="button"
                            data-component-type="component"
                            {% if tag != blank %}data-component-tag="{{ tag }}"
                            {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                            {{ attributes }}
                          >
                            {{ text }}
                          </button>
                          
                          {% liquid
                            assign style = style_1c0554e6
                            assign style_1c0554e6 = nil
                            assign size = size_1c0554e6
                            assign size_1c0554e6 = nil
                            assign text = text_1c0554e6
                            assign text_1c0554e6 = nil
                            assign attributes = attributes_1c0554e6
                            assign attributes_1c0554e6 = nil
                          %}
                          {% comment %}Component button:default:1.0.0-pre.10 end{% endcomment %}
                          {% assign details_text = 'templates.cart.recommendations.product_details' | t %}
                          {% comment %}Component button-link:default:1.0.0-pre.10 begin{% endcomment %}
                          {% liquid
                            assign style_d82721d5 = style
                            assign style = 'text'
                            assign size_d82721d5 = size
                            assign size = 'small'
                            assign href_d82721d5 = href
                            assign href = cross_sell_product.url
                            assign text_d82721d5 = text
                            assign text = details_text
                            assign attributes_d82721d5 = attributes
                            assign attributes = 'data-cross-sell-card-details-link'
                          %}
                          {% comment %}
                            @param href [Required]
                              This is the anchor tag for the link button.
                          
                            @param style [Required]
                              This is the style of the button: primary, secondary, tertiary, or text.
                          
                            @param size [Required]
                              This defines the size of the button: small, medium, or large.
                          
                            @param text [Required]
                              This is the text to be included in the button.
                          
                            @param attributes [Optional]
                              Any additional attributes to add to the button-link tag.
                          {% endcomment %}
                          
                          <a
                            data-component="button-link"
                            data-component-type="component"
                            {% if tag != blank %}data-component-tag="{{ tag }}"
                            {% endif %}class="button-link button-link--{{ style }} button-link--{{ size }}{% if style == 'primary' or style == 'secondary' %} button-link--shadow{% endif %%}"
                            {% if href != blank %}
                              href="{{ href }}"
                            {% endif %}
                            {{ attributes }}
                          >
                            {{ text }}
                          </a>
                          
                          {% liquid
                            assign style = style_d82721d5
                            assign style_d82721d5 = nil
                            assign size = size_d82721d5
                            assign size_d82721d5 = nil
                            assign href = href_d82721d5
                            assign href_d82721d5 = nil
                            assign text = text_d82721d5
                            assign text_d82721d5 = nil
                            assign attributes = attributes_d82721d5
                            assign attributes_d82721d5 = nil
                          %}
                          {% comment %}Component button-link:default:1.0.0-pre.10 end{% endcomment %}
                        </div>
                      </div>
                    </div>
                  </div>
                  
                  
                  {% liquid
                    assign cross_sell_product = cross_sell_product_b86bfb35
                    assign cross_sell_product_b86bfb35 = nil
                  %}
                  {% comment %}Component cross-sell-card:default:1.0.0-pre.10 end{% endcomment %}
                {% endif %}
              </li>
            {% endfor %}
          {% else %}
            {% for product_item in (1..limit) %}
              <li class="product-card-slider__item" data-slider-item>
                {% comment %}Component product-card:default:1.0.0-pre.10 begin{% endcomment %}
                {% render 'product-card', product_card_product: nil %}
                {% comment %}Component product-card:default:1.0.0-pre.10 end{% endcomment %}
              </li>
            {% endfor %}
          {% endunless %}
        </ul>
      
        {% capture previous_attributes %}
          data-slider-button-previous
          name="previous"
          aria-label="{{ 'general.accessibility.previous_slide' | t }}"
        {% endcapture %}
        {% capture next_attributes %}
          data-slider-button-next
          name="next"
          aria-label="{{ 'general.accessibility.previous_slide' | t }}"
        {% endcapture %}
      
        <div
          class="
            product-card-slider__buttons
            {% if hide_desktop_buttons %}
              product-card-slider__buttons--desktop-hidden
            {% endif %}
            {% if hide_mobile_buttons %}
              product-card-slider__buttons--mobile-hidden
            {% endif %}
          "
          data-product-card-slider-buttons
        >
          <div
            class="
              product-card-slider__button
              product-card-slider__button--previous
            "
          >
            {% comment %}Component button-floating:default:1.0.0-pre.10 begin{% endcomment %}
            {% liquid
              assign style_90085172 = style
              assign style = 'default'
              assign size_90085172 = size
              assign size = 'medium'
              assign icon_90085172 = icon
              assign icon = 'chevron'
              assign label_90085172 = label
              assign label = previous_label
              assign attributes_90085172 = attributes
              assign attributes = previous_attributes
            %}
            {% comment %}
              @param style [Required]
                This is the style of the button: default, or quiet. Default default.
            
              @param size [Required]
                This defines the size of the button: small, medium, or large. Default medium.
            
              @param icon [Required]
                This is the icon to be included in the button.
            
              @param label [Required]
                The label for the button, which will be read out to a screen reader
            
              @param attributes [Optional]
                This will include any additional attributes that the button needs. For example, aria-controls.
            {% endcomment %}
            
            <button
              data-component="button-floating"
              data-component-type="component"
              {% if tag != blank %}data-component-tag="{{ tag }}"
              {% endif %}class="button-floating button-floating--{{ style }} button-floating--{{ size }} button-floating--{{ icon }}"
              {{ attributes }}
            >
              <span class="visually-hidden">{{ label }}</span>
            </button>
            
            {% liquid
              assign style = style_90085172
              assign style_90085172 = nil
              assign size = size_90085172
              assign size_90085172 = nil
              assign icon = icon_90085172
              assign icon_90085172 = nil
              assign label = label_90085172
              assign label_90085172 = nil
              assign attributes = attributes_90085172
              assign attributes_90085172 = nil
            %}
            {% comment %}Component button-floating:default:1.0.0-pre.10 end{% endcomment %}
          </div>
          <div
            class="
              product-card-slider__button
              product-card-slider__button--next
            "
          >
            {% comment %}Component button-floating:default:1.0.0-pre.10 begin{% endcomment %}
            {% liquid
              assign style_c90a24bd = style
              assign style = 'default'
              assign size_c90a24bd = size
              assign size = 'medium'
              assign icon_c90a24bd = icon
              assign icon = 'chevron'
              assign label_c90a24bd = label
              assign label = next_label
              assign attributes_c90a24bd = attributes
              assign attributes = next_attributes
            %}
            {% comment %}
              @param style [Required]
                This is the style of the button: default, or quiet. Default default.
            
              @param size [Required]
                This defines the size of the button: small, medium, or large. Default medium.
            
              @param icon [Required]
                This is the icon to be included in the button.
            
              @param label [Required]
                The label for the button, which will be read out to a screen reader
            
              @param attributes [Optional]
                This will include any additional attributes that the button needs. For example, aria-controls.
            {% endcomment %}
            
            <button
              data-component="button-floating"
              data-component-type="component"
              {% if tag != blank %}data-component-tag="{{ tag }}"
              {% endif %}class="button-floating button-floating--{{ style }} button-floating--{{ size }} button-floating--{{ icon }}"
              {{ attributes }}
            >
              <span class="visually-hidden">{{ label }}</span>
            </button>
            
            {% liquid
              assign style = style_c90a24bd
              assign style_c90a24bd = nil
              assign size = size_c90a24bd
              assign size_c90a24bd = nil
              assign icon = icon_c90a24bd
              assign icon_c90a24bd = nil
              assign label = label_c90a24bd
              assign label_c90a24bd = nil
              assign attributes = attributes_c90a24bd
              assign attributes_c90a24bd = nil
            %}
            {% comment %}Component button-floating:default:1.0.0-pre.10 end{% endcomment %}
          </div>
        </div>
      </div>
      
      {% liquid
        assign products = products_47c4d339
        assign products_47c4d339 = nil
        assign limit = limit_47c4d339
        assign limit_47c4d339 = nil
        assign cards_per_group = cards_per_group_47c4d339
        assign cards_per_group_47c4d339 = nil
      %}
      {% comment %}Component product-card-slider:default:1.0.0-pre.10 end{% endcomment %}
    </section-content>
  </section-wrapper>
</section>
{% schema %}
{
  "name": "Featured collection",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured collection"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Highlight a buying property or value proposition"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "limit",
      "label": "Maximum products to show",
      "min": 2,
      "max": 10,
      "default": 5,
      "step": 1
    },
    {
      "type": "checkbox",
      "id": "show_view_all_button",
      "label": "Enable \"View all\" button",
      "info": "Appears if collection has more products than shown."
    },
    {
      "type": "select",
      "id": "cards_per_group",
      "label": "Products per group",
      "options": [
        {
          "value": "3",
          "label": "3 products"
        },
        {
          "value": "4",
          "label": "4 products"
        },
        {
          "value": "5",
          "label": "5 products"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Featured collection"
    }
  ]
}
{% endschema %}